name: Mobile CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  web-test:
    runs-on: ubuntu-latest
    name: Web Testing and Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Run Jest tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Run web build
      run: npm run web:build || echo "Web build script not configured"
    
    - name: Upload test coverage
      uses: codecov/codecov-action@v4
      if: github.event_name == 'push' && env.CODECOV_TOKEN != ''
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
      continue-on-error: true

  android-build:
    runs-on: ubuntu-latest
    needs: web-test
    name: Android Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Create keystore (development)
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/my-upload-key.keystore
      if: env.ANDROID_KEYSTORE_BASE64 != ''
      env:
        ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
    
    - name: Build Android Release
      run: |
        cd android
        if [ "${{ secrets.ANDROID_KEY_ALIAS }}" != "" ]; then
          ./gradlew assembleRelease --no-daemon
        else
          echo "No signing configuration - building debug APK"
          ./gradlew assembleDebug --no-daemon
        fi
      env:
        MYAPP_UPLOAD_STORE_FILE: my-upload-key.keystore
        MYAPP_UPLOAD_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        MYAPP_UPLOAD_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
        MYAPP_UPLOAD_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
    
    - name: Upload Android APK
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: |
          android/app/build/outputs/apk/release/app-release.apk
          android/app/build/outputs/apk/debug/app-debug.apk
        retention-days: 30
      if: success()

  ios-build:
    runs-on: macos-latest
    needs: web-test
    name: iOS Build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Cache CocoaPods
      uses: actions/cache@v4
      with:
        path: ios/Pods
        key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-pods-
    
    - name: Install CocoaPods
      run: |
        cd ios
        pod install --repo-update
    
    - name: Build iOS
      run: |
        cd ios
        xcodebuild -workspace justo.xcworkspace -scheme justo -configuration Release -sdk iphonesimulator -derivedDataPath build
    
    - name: Upload iOS Build
      uses: actions/upload-artifact@v4
      with:
        name: ios-build
        path: ios/build/Build/Products/Release-iphonesimulator/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Run security audit
      run: |
        npm audit --audit-level high
        npm audit --audit-level critical --audit-level high --json > security-report.json
    
    - name: Upload security report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.json